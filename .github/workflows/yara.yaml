---
name: YARA

on:
  workflow_call:
    inputs:
      runs-on:
        description: Runner image
        required: true
        type: string
      version:
        description: YARA version
        default: 4.3.1
        required: false
        type: string
    outputs:
      artifacts:
        description: YARA Artifacts
        value: ${{ jobs.output.outputs.artifacts }}
      include-dir:
        description: YARA Includes Directory
        value: libyara/include
      library-path:
        description: YARA Library Path
        value: .libs

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  yara:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Cache YARA
        id: cache-yara
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809  # v4.2.4
        with:
          key: yara-${{ inputs.version }}-${{ runner.os }}-${{ runner.arch }}
          path: yara-${{ inputs.version }}

      - name: Compile YARA
        run: |
          #/usr/bin/env bash
          set -e

          curl -sL \
              https://github.com/VirusTotal/yara/archive/refs/tags/v${{ inputs.version }}.tar.gz \
              -o yara-${{ inputs.version }}.tar.gz
          tar -xzf yara-${{ inputs.version }}.tar.gz
          cd yara-${{ inputs.version }}
          ./bootstrap.sh
          ./configure
          make
        if: steps.cache-yara.outputs.cache-hit != 'true' && runner.os == 'Linux'

      - name: Upload YARA
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          if-no-files-found: error
          name: yara-${{ inputs.version }}-${{ runner.os }}-${{ runner.arch }}
          path: |
            yara-${{ inputs.version }}/libyara/include/yara
            yara-${{ inputs.version }}/libyara/include/yara.h
            yara-${{ inputs.version }}/.libs/libyara*
          include-hidden-files: true
          retention-days: 1
          overwrite: true

    outputs:
      artifacts: yara-${{ inputs.version }}-${{ runner.os }}-${{ runner.arch }}

  output:
    needs: yara

    runs-on: ubuntu-22.04
    steps:
      - name: Write Matrix Output
        id: write
        uses: cloudposse/github-action-matrix-outputs-write@ed06cf3a6bf23b8dce36d1cf0d63123885bb8375  # v1.0.0
        with:
          matrix-step-name: yara
          matrix-key: ${{ inputs.runs-on }}
          outputs: |-
            artifacts: ${{ needs.yara.outputs.artifacts }}

    outputs:
      artifacts: ${{ fromJson(steps.write.outputs.result).artifacts }}
